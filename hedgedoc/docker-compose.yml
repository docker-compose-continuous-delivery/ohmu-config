services:
  hedgedoc:
    image: quay.io/hedgedoc/hedgedoc:latest
    restart: unless-stopped
    container_name: hedgedoc
    environment:
      CMD_DOMAIN: "hedgedoc.ozeliurs.com"
      CMD_ALLOW_ORIGIN: "hedgedoc.ozeliurs.com"
      CMD_PROTOCOL_USESSL: "true"
      CMD_URL_ADDPORT: "false"
      CMD_EMAIL: "true"
      CMD_DOCUMENT_MAX_LENGTH: "1000000000"
      CMD_DB_URL: "postgres://hedgedoc:3&&HeyWjuk6@vB@dFwBZ@hedgedoc_db:5432/hedgedoc"
    volumes:
      - hedgedoc-appdata:/hedgedoc/public/uploads
    depends_on:
      hedgedoc_db:
        condition: service_healthy
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hedgedoc.rule=Host(`hedgedoc.ozeliurs.com`)"
      - "traefik.http.routers.hedgedoc.entrypoints=websecure"
      - "traefik.http.routers.hedgedoc.tls=true"
      - "traefik.http.routers.hedgedoc.tls.certresolver=letsencrypt"

  hedgedoc_db:
    image: postgres:13-alpine
    restart: unless-stopped
    container_name: hedgedoc_db
    environment:
      POSTGRES_USER: "hedgedoc"
      POSTGRES_DB: "hedgedoc"
      POSTGRES_PASSWORD: "3&&HeyWjuk6@vB@dFwBZ"
    volumes:
      - hedgedoc-dbdata:/var/lib/postgresql/data
    networks:
      - traefik
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "hedgedoc" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  traefik:
    external: true

volumes:
  hedgedoc-appdata:
    driver: local
    driver_opts:
      type: none
      device: '/mnt/appdata/hedgedoc/app'
      o: bind
  hedgedoc-dbdata:
    driver: local
    driver_opts:
      type: none
      device: '/mnt/appdata/hedgedoc/db'
      o: bind