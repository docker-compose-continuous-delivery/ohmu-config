name: Validate Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  find-docker-compose-files:
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.set-matrix.outputs.directories }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find Docker Compose files
        id: set-matrix
        run: |
          directories=$(find . -mindepth 1 -maxdepth 1 -type d -not -path './.*' -exec basename {} \;)
          directories=$(echo "$directories" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "::set-output name=directories::$directories"

  validate:
    needs: find-docker-compose-files
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: ${{ fromJson(needs.find-docker-compose-files.outputs.directories) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate Docker Compose
        run: docker compose -f "${{ matrix.directory }}/docker-compose.yml" config

  check-collisions:
    needs: validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for service name collisions
        run: |
          services=$(find . -name 'docker-compose.yml' -exec yq eval '.services | keys' {} + | sort | uniq -d)
          if [ -n "$services" ]; then
              echo "Error: Duplicate service names found:"
              echo "$services"
              exit 1
          else
              echo "No duplicate service names found."
          fi
